# -- Prerequisites --
#
# Before running LAMMPS on this file, you must have already...
# 1) Run cellpack2lt.py to create the "system.lt" file moltemplate needs
# 2) Run "moltemplate.sh system.lt" to create the
#   "system.data", "system.in.init", and "system.in.settings" files LAMMPS needs
# 3) You must have run the first stage of minimization using "run.in.min1"
#    (using a command like: lmp_ubuntu -i run.in.min1)
# 4) You must have run the second stage of minimization using "run.in.min2"
#    (using a command like: lmp_ubuntu -i run.in.min2)

# -- Init Section --

include system.in.init

# -- Atom Definition Section --

print '-----------------------------------------------------------------------'
print 'Make sure you run LAMMPS on \"run.in.min2\" before running this simulation.'
print '(Minimization is necessary beforehand to avoid initial particle overlap.)'
print '-----------------------------------------------------------------------'


read_data system_after_min.data


# -- Settings Section --

include system.in.settings

# Load the Lennard-Jones force parameters between particles
# (Normally these are included in "sytem.in.settings", but not in this example.)

include system.in.settings.pair.coeffs

# Warn LAMMPS that there might be a large disparity in particle sizes:
# For details, see  http://lammps.sandia.gov/doc/neigh_modify.html

neigh_modify one 20000 page 200000

# -- Run Section --

group todump subtract all gBicycleI gBicycleO
dump            1 todump custom 100 traj.lammpstrj id mol type x y z ix iy iz
dump_modify 1 sort id

thermo_style    custom step temp pe etotal epair ebond eangle edihed
thermo          100       # time interval for printing out "thermo" data
thermo_modify   norm yes flush yes


# Molecules containing multiple atoms use rigid-body integrators to hold
# each molecule together and preserve its shape (while allowing it to move).
# The group of atoms named "gRigid" contains only these atoms.
# (This group is defined in system.in.settings)
group mobile subtract all gFixed gOrdinary
fix fxRigid mobile  rigid molecule    #(move the atoms in the "gRigid" group)


# Molecules containing only one atom do not need to be treated as rigid
# bodies. We do not need to use rigid body integrators for them. Instead
# we can use ordinary "fix nve" to integrate their equations of motion.
# The group of atoms named "gOrdinary" contains only these atoms.
# (This group is defined in system.in.settings)

fix fxNVE   gOrdinary nve            #(move the atoms in the "gOrdinary" group)


# Tell LAMMPS to only compute forces between particles in different molecules.
# (No need to compute forces between particles in the same rigid molecule)
# This drastically reduces the number of pairwise forces that need to
# be calculated:

#neigh_modify exclude molecule/intra gRigid
neigh_modify one 20000 page 200000 
neigh_modify exclude molecule/intra all
neigh_modify exclude type 2 3
neigh_modify exclude molecule/inter gBicycleI
neigh_modify exclude molecule/inter gBicycleO

# Reduce the time spent computing neighbor lists by increasing the bin size
# and using "multi" style (needed when a large range of radii are in use)

neighbor 15.0 multi  # <-- THIS IS A SAFE CHOICE, BUT SIMULATIONS WILL BE SLOW.
                     #     IF YOUR SIMULATION LACKS PARTICLES/ATOMS LARGER THAN
		     #     A RIBOSOME, THEN USE A MUCH SMALLER VALUE (ie 10.0).
		     #     PLAY WITH THIS NUMBER TO IMPROVE THE SIMULATION SPEED
		     #     (Later, I should get cellpack2moltemplate to choose
		     #      this number automatically from the particle radii.)

region rSphereI sphere  0 0 0  4100.0 side in #region size
region rSphereO sphere  0 0 0  0.0  side out #region size
group interior union gisg_interior gBicycleI#union of compartment name and bicycle
group exterior union gcytoplasme gBicycleO
fix fxWall1 interior wall/region rSphereI  harmonic  2.0  1.0  2790.0  #actual radius = 4100-2700 = 1400 radius
fix fxWall2 exterior wall/region rSphereO  harmonic  2.0  1.0  1430.0  #actual radius = 10.0+1390 = 1400 radius
fix_modify fxWall1 energy yes
fix_modify fxWall2 energy yes

# Apply random thermal forces and damping to maintain system at constant temp:

fix fxLan     mobile langevin 0.5961621 0.5961621 200.0 48279

# (0.5961621 is the temperature, in this case, in kcal/mole,
#  200.0 is the damping time)


# ------------------- Run the simulation ------------------------

timestep        0.2   #<--THIS NUMBER MAY BE TOO LARGE.
                      #   IF THE SIMULATION CRASHES, LOWER IT

run 400000            #<-- main simulation
unfix fxLan


